from aiogram import Router, F
from aiogram.types import Message
from datetime import datetime, timedelta
from utils import ADMIN_IDS, load_json, save_json, USERS_FILE

router = Router()

@router.message(F.text == "/remind_inactive")
async def remind_inactive_cmd(message: Message):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("Access denied")
        return

    users = load_json(USERS_FILE)
    now = datetime.now()
    threshold = now - timedelta(days=7)  # –ù–µ–∞–∫—Ç–∏–≤–Ω—ã 7+ –¥–Ω–µ–π
    reminded_count = 0

    for uid_str, data in users.items():
        last_act_str = data.get("last_activity", "")
        if not last_act_str:
            continue
        try:
            last_act = datetime.strptime(last_act_str, "%Y-%m-%d %H:%M:%S")
        except ValueError:
            continue
        if last_act < threshold:
            name = data["name"]
            text = (f"–ü—Ä–∏–≤–µ—Ç, {name}! –ú—ã –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤—ã –¥–∞–≤–Ω–æ –Ω–µ –∑–∞—Ö–æ–¥–∏–ª–∏ –≤ –±–æ—Ç–∞.\n"
                    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –ª–∏ —É –≤–∞—Å –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á ‚Äî –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ!\n"
                    "–ú—ã –¥–æ–±–∞–≤–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å! üòâ")
            try:
                await message.bot.send_message(int(uid_str), text)
                reminded_count += 1
            except:
                pass

    await message.answer(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã {reminded_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")
