from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from utils import add_report, load_json

router = Router()

@router.message(Command("report"))
async def report_cmd(message: Message):
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2 or not parts[1].strip():
        await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: `/report <–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>`")
        return

    reported_name = parts[1].strip()
    reported_id = None

    users = load_json("data/users.json")
    for user_id, data in users.items():
        if data["name"].lower() == reported_name.lower():
            reported_id = user_id
            break

    if reported_id is None:
        await message.answer("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    result = add_report(message.from_user.id, reported_id)
    if result == "already_reported":
        await message.answer(f"‚ÑπÔ∏è –í—ã —É–∂–µ –ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å –Ω–∞ {reported_name}.")
    elif result is True:
        await message.answer(f"‚ö†Ô∏è {reported_name} –ø–æ–ª—É—á–∏–ª 3+ –∂–∞–ª–æ–±—ã! –ú–∏–Ω—É—Å 10 –æ—á–∫–æ–≤!")
    else:
        await message.answer(f"üö® –ñ–∞–ª–æ–±–∞ –Ω–∞ {reported_name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
